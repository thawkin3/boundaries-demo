{"version":3,"sources":["AppSectionSwitcher.js","components/00-demo-starting-point/CurrentDateTime.js","components/00-demo-starting-point/DateFormatterInput.js","components/00-demo-starting-point/RelativeTime.js","components/00-demo-starting-point/DemoStartingPointPage.js","components/01-momentjs/CurrentDateTime.js","components/01-momentjs/DateFormatterInput.js","components/01-momentjs/RelativeTime.js","components/01-momentjs/MomentJsPage.js","components/02-dayjs/CurrentDateTime.js","components/02-dayjs/DateFormatterInput.js","components/02-dayjs/RelativeTime.js","components/02-dayjs/DayJsPage.js","components/03-date-fns/CurrentDateTime.js","components/03-date-fns/DateFormatterInput.js","components/03-date-fns/RelativeTime.js","components/03-date-fns/DateFnsPage.js","DateApiWrapper.js","components/04-wrapped-api/CurrentDateTime.js","components/04-wrapped-api/DateFormatterInput.js","components/04-wrapped-api/RelativeTime.js","components/04-wrapped-api/WrappedApiPage.js","App.js","index.js"],"names":["AppSectionSwticher","selectedRadioButton","setSelectedRadioButton","type","id","name","value","checked","onChange","htmlFor","CurrentDateTime","useState","Date","currentTime","setCurrentTime","refreshClock","useEffect","timerId","setInterval","clearInterval","moment","format","DateFormatterInput","dateString","setDateString","e","target","RelativeTime","fromNow","DemoStartingPointPage","MomentJsPage","dayjs","extend","relativeTime","DayJsPage","formatDate","formatDistanceToNow","addSuffix","formatRelativeTime","DateFnsPage","desiredFormat","formatRelativeTimeToNow","WrappedApiPage","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df3d40f6.chunk.js","sourcesContent":["import React from 'react'\n\nexport const AppSectionSwticher = ({\n  selectedRadioButton,\n  setSelectedRadioButton,\n}) => {\n  return (\n    <section>\n      <h2>Choose your date library for the demo</h2>\n      <input\n        type=\"radio\"\n        id=\"demo-start\"\n        name=\"dateLibrary\"\n        value=\"demo-start\"\n        checked={selectedRadioButton === 'demo-start'}\n        onChange={() => setSelectedRadioButton('demo-start')}\n      />\n      <label htmlFor=\"demo-start\">Demo Starting Point (Moment.js)</label>\n      <br />\n      <input\n        type=\"radio\"\n        id=\"momentjs\"\n        name=\"dateLibrary\"\n        value=\"momentjs\"\n        checked={selectedRadioButton === 'momentjs'}\n        onChange={() => setSelectedRadioButton('momentjs')}\n      />\n      <label htmlFor=\"momentjs\">Moment.js</label>\n      <br />\n      <input\n        type=\"radio\"\n        id=\"dayjs\"\n        name=\"dateLibrary\"\n        value=\"dayjs\"\n        checked={selectedRadioButton === 'dayjs'}\n        onChange={() => setSelectedRadioButton('dayjs')}\n      />\n      <label htmlFor=\"dayjs\">Day.js</label>\n      <br />\n      <input\n        type=\"radio\"\n        id=\"date-fns\"\n        name=\"dateLibrary\"\n        value=\"date-fns\"\n        checked={selectedRadioButton === 'date-fns'}\n        onChange={() => setSelectedRadioButton('date-fns')}\n      />\n      <label htmlFor=\"date-fns\">date-fns</label>\n      <br />\n      <input\n        type=\"radio\"\n        id=\"wrapped-api\"\n        name=\"dateLibrary\"\n        value=\"wrapped-api\"\n        checked={selectedRadioButton === 'wrapped-api'}\n        onChange={() => setSelectedRadioButton('wrapped-api')}\n      />\n      <label htmlFor=\"wrapped-api\">Wrapped API</label>\n    </section>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\n\nexport const CurrentDateTime = () => {\n  const [currentTime, setCurrentTime] = useState(new Date())\n\n  function refreshClock() {\n    setCurrentTime(new Date())\n  }\n  useEffect(() => {\n    const timerId = setInterval(refreshClock, 1000)\n\n    return () => clearInterval(timerId)\n  }, [])\n\n  return (\n    <section>\n      <h2>Current Date and Time</h2>\n      <p>{moment(currentTime).format('MMMM DD, YYYY HH:mm:ss')}</p>\n    </section>\n  )\n}\n","import React, { useState } from 'react'\nimport moment from 'moment'\n\nexport const DateFormatterInput = () => {\n  const [dateString, setDateString] = useState('')\n\n  const handleChange = (e) => {\n    setDateString(e.target.value)\n  }\n\n  return (\n    <section>\n      <h2>Take a User Input and Format It</h2>\n      <label htmlFor=\"date-formatter-input\">\n        Enter a date string (in just about any format!)\n      </label>\n      <br />\n      <br />\n      <input\n        id=\"date-formatter-input\"\n        value={dateString}\n        onChange={handleChange}\n      />\n      <br />\n      <br />\n      <p>\n        <b>You entered:</b> {dateString}\n      </p>\n      <p>\n        <b>The formatted date is:</b>{' '}\n        {moment(dateString).format('MMMM DD, YYYY')}\n      </p>\n    </section>\n  )\n}\n","import React, { useState } from 'react'\nimport moment from 'moment'\n\nexport const RelativeTime = () => {\n  const [dateString, setDateString] = useState('')\n\n  const handleChange = (e) => {\n    setDateString(e.target.value)\n  }\n\n  return (\n    <section>\n      <h2>Relative Time</h2>\n      <label htmlFor=\"relative-time-input\">\n        Enter a date string (in just about any format!)\n      </label>\n      <br />\n      <br />\n      <input\n        id=\"relative-time-input\"\n        value={dateString}\n        onChange={handleChange}\n      />\n      <br />\n      <br />\n      <p>\n        {moment(dateString).format('MMMM DD, YYYY')} is/was{' '}\n        <b>{moment(dateString).fromNow()}</b>\n      </p>\n    </section>\n  )\n}\n","import React from 'react'\nimport { CurrentDateTime } from './CurrentDateTime'\nimport { DateFormatterInput } from './DateFormatterInput'\nimport { RelativeTime } from './RelativeTime'\n\nexport const DemoStartingPointPage = () => (\n  <>\n    <CurrentDateTime />\n    <DateFormatterInput />\n    <RelativeTime />\n  </>\n)\n","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\n\nexport const CurrentDateTime = () => {\n  const [currentTime, setCurrentTime] = useState(new Date())\n\n  function refreshClock() {\n    setCurrentTime(new Date())\n  }\n  useEffect(() => {\n    const timerId = setInterval(refreshClock, 1000)\n\n    return () => clearInterval(timerId)\n  }, [])\n\n  return (\n    <section>\n      <h2>Current Date and Time</h2>\n      <p>{moment(currentTime).format('MMMM DD, YYYY HH:mm:ss')}</p>\n    </section>\n  )\n}\n","import React, { useState } from 'react'\nimport moment from 'moment'\n\nexport const DateFormatterInput = () => {\n  const [dateString, setDateString] = useState('')\n\n  const handleChange = (e) => {\n    setDateString(e.target.value)\n  }\n\n  return (\n    <section>\n      <h2>Take a User Input and Format It</h2>\n      <label htmlFor=\"date-formatter-input\">\n        Enter a date string (in just about any format!)\n      </label>\n      <br />\n      <br />\n      <input\n        id=\"date-formatter-input\"\n        value={dateString}\n        onChange={handleChange}\n      />\n      <br />\n      <br />\n      <p>\n        <b>You entered:</b> {dateString}\n      </p>\n      <p>\n        <b>The formatted date is:</b>{' '}\n        {moment(dateString).format('MMMM DD, YYYY')}\n      </p>\n    </section>\n  )\n}\n","import React, { useState } from 'react'\nimport moment from 'moment'\n\nexport const RelativeTime = () => {\n  const [dateString, setDateString] = useState('')\n\n  const handleChange = (e) => {\n    setDateString(e.target.value)\n  }\n\n  return (\n    <section>\n      <h2>Relative Time</h2>\n      <label htmlFor=\"relative-time-input\">\n        Enter a date string (in just about any format!)\n      </label>\n      <br />\n      <br />\n      <input\n        id=\"relative-time-input\"\n        value={dateString}\n        onChange={handleChange}\n      />\n      <br />\n      <br />\n      <p>\n        {moment(dateString).format('MMMM DD, YYYY')} is/was{' '}\n        <b>{moment(dateString).fromNow()}</b>\n      </p>\n    </section>\n  )\n}\n","import React from 'react'\nimport { CurrentDateTime } from './CurrentDateTime'\nimport { DateFormatterInput } from './DateFormatterInput'\nimport { RelativeTime } from './RelativeTime'\n\nexport const MomentJsPage = () => (\n  <>\n    <CurrentDateTime />\n    <DateFormatterInput />\n    <RelativeTime />\n  </>\n)\n","import React, { useEffect, useState } from 'react'\nimport dayjs from 'dayjs'\n\nexport const CurrentDateTime = () => {\n  const [currentTime, setCurrentTime] = useState(new Date())\n\n  function refreshClock() {\n    setCurrentTime(new Date())\n  }\n  useEffect(() => {\n    const timerId = setInterval(refreshClock, 1000)\n\n    return () => clearInterval(timerId)\n  }, [])\n\n  return (\n    <section>\n      <h2>Current Date and Time</h2>\n      <p>{dayjs(currentTime).format('MMMM DD, YYYY HH:mm:ss')}</p>\n    </section>\n  )\n}\n","import React, { useState } from 'react'\nimport dayjs from 'dayjs'\n\nexport const DateFormatterInput = () => {\n  const [dateString, setDateString] = useState('')\n\n  const handleChange = (e) => {\n    setDateString(e.target.value)\n  }\n\n  return (\n    <section>\n      <h2>Take a User Input and Format It</h2>\n      <label htmlFor=\"date-formatter-input\">\n        Enter a date string (in just about any format!)\n      </label>\n      <br />\n      <br />\n      <input\n        id=\"date-formatter-input\"\n        value={dateString}\n        onChange={handleChange}\n      />\n      <br />\n      <br />\n      <p>\n        <b>You entered:</b> {dateString}\n      </p>\n      <p>\n        <b>The formatted date is:</b>{' '}\n        {dayjs(dateString).format('MMMM DD, YYYY')}\n      </p>\n    </section>\n  )\n}\n","import React, { useState } from 'react'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\n\ndayjs.extend(relativeTime)\n\nexport const RelativeTime = () => {\n  const [dateString, setDateString] = useState('')\n\n  const handleChange = (e) => {\n    setDateString(e.target.value)\n  }\n\n  return (\n    <section>\n      <h2>Relative Time</h2>\n      <label htmlFor=\"relative-time-input\">\n        Enter a date string (in just about any format!)\n      </label>\n      <br />\n      <br />\n      <input\n        id=\"relative-time-input\"\n        value={dateString}\n        onChange={handleChange}\n      />\n      <br />\n      <br />\n      <p>\n        {dayjs(dateString).format('MMMM DD, YYYY')} is/was{' '}\n        <b>{dayjs(dateString).fromNow()}</b>\n      </p>\n    </section>\n  )\n}\n","import React from 'react'\nimport { CurrentDateTime } from './CurrentDateTime'\nimport { DateFormatterInput } from './DateFormatterInput'\nimport { RelativeTime } from './RelativeTime'\n\nexport const DayJsPage = () => (\n  <>\n    <CurrentDateTime />\n    <DateFormatterInput />\n    <RelativeTime />\n  </>\n)\n","import React, { useEffect, useState } from 'react'\nimport { format } from 'date-fns'\n\nexport const CurrentDateTime = () => {\n  const [currentTime, setCurrentTime] = useState(new Date())\n\n  function refreshClock() {\n    setCurrentTime(new Date())\n  }\n  useEffect(() => {\n    const timerId = setInterval(refreshClock, 1000)\n\n    return () => clearInterval(timerId)\n  }, [])\n\n  return (\n    <section>\n      <h2>Current Date and Time</h2>\n      <p>{format(new Date(currentTime), 'MMMM dd, yyyy HH:mm:ss')}</p>\n    </section>\n  )\n}\n","import React, { useState } from 'react'\nimport { format } from 'date-fns'\n\nexport const DateFormatterInput = () => {\n  const [dateString, setDateString] = useState('')\n\n  const handleChange = (e) => {\n    setDateString(e.target.value)\n  }\n\n  const formatDate = () => {\n    try {\n      return format(new Date(dateString), 'MMMM dd, yyyy')\n    } catch (e) {\n      return 'Invalid Date'\n    }\n  }\n\n  return (\n    <section>\n      <h2>Take a User Input and Format It</h2>\n      <label htmlFor=\"date-formatter-input\">\n        Enter a date string (in just about any format!)\n      </label>\n      <br />\n      <br />\n      <input\n        id=\"date-formatter-input\"\n        value={dateString}\n        onChange={handleChange}\n      />\n      <br />\n      <br />\n      <p>\n        <b>You entered:</b> {dateString}\n      </p>\n      <p>\n        <b>The formatted date is:</b> {formatDate()}\n      </p>\n    </section>\n  )\n}\n","import React, { useState } from 'react'\nimport { format, formatDistanceToNow } from 'date-fns'\n\nexport const RelativeTime = () => {\n  const [dateString, setDateString] = useState('')\n\n  const handleChange = (e) => {\n    setDateString(e.target.value)\n  }\n\n  const formatDate = () => {\n    try {\n      return format(new Date(dateString), 'MMMM dd, yyyy')\n    } catch (e) {\n      return 'Invalid Date'\n    }\n  }\n\n  const formatRelativeTime = () => {\n    try {\n      return formatDistanceToNow(new Date(dateString), { addSuffix: true })\n    } catch (e) {\n      return 'NaN'\n    }\n  }\n\n  return (\n    <section>\n      <h2>Relative Time</h2>\n      <label htmlFor=\"relative-time-input\">\n        Enter a date string (in just about any format!)\n      </label>\n      <br />\n      <br />\n      <input\n        id=\"relative-time-input\"\n        value={dateString}\n        onChange={handleChange}\n      />\n      <br />\n      <br />\n      <p>\n        {formatDate()} is/was <b>{formatRelativeTime()}</b>\n      </p>\n    </section>\n  )\n}\n","import React from 'react'\nimport { CurrentDateTime } from './CurrentDateTime'\nimport { DateFormatterInput } from './DateFormatterInput'\nimport { RelativeTime } from './RelativeTime'\n\nexport const DateFnsPage = () => (\n  <>\n    <CurrentDateTime />\n    <DateFormatterInput />\n    <RelativeTime />\n  </>\n)\n","//////////////////////////////////////////////////////////\n// Using Moment.js\n//////////////////////////////////////////////////////////\n\nimport moment from 'moment'\n\nexport const formatDate = (dateString, desiredFormat) =>\n  moment(dateString).format(desiredFormat)\n\nexport const formatRelativeTimeToNow = (dateString) =>\n  moment(dateString).fromNow()\n\n//////////////////////////////////////////////////////////\n// Using Day.js\n//////////////////////////////////////////////////////////\n\n// import dayjs from 'dayjs'\n// import relativeTime from 'dayjs/plugin/relativeTime'\n\n// dayjs.extend(relativeTime)\n\n// export const formatDate = (dateString, desiredFormat) =>\n//   dayjs(dateString).format(desiredFormat)\n\n// export const formatRelativeTimeToNow = (dateString) =>\n//   dayjs(dateString).fromNow()\n\n//////////////////////////////////////////////////////////\n// Using date-fns\n//////////////////////////////////////////////////////////\n\n// import { format, formatDistanceToNow } from 'date-fns'\n\n// export const formatDate = (dateString, desiredFormat) => {\n//   try {\n//     return format(new Date(dateString), desiredFormat)\n//   } catch (e) {\n//     return 'Invalid Date'\n//   }\n// }\n\n// export const formatRelativeTimeToNow = (dateString) => {\n//   try {\n//     return formatDistanceToNow(new Date(dateString), { addSuffix: true })\n//   } catch (e) {\n//     return 'NaN'\n//   }\n// }\n","import React, { useEffect, useState } from 'react'\nimport { formatDate } from '../../DateApiWrapper'\n\nexport const CurrentDateTime = () => {\n  const [currentTime, setCurrentTime] = useState(new Date())\n\n  function refreshClock() {\n    setCurrentTime(new Date())\n  }\n  useEffect(() => {\n    const timerId = setInterval(refreshClock, 1000)\n\n    return () => clearInterval(timerId)\n  }, [])\n\n  return (\n    <section>\n      <h2>Current Date and Time</h2>\n      <p>{formatDate(currentTime, 'MMMM DD, YYYY HH:mm:ss')}</p>\n    </section>\n  )\n}\n","import React, { useState } from 'react'\nimport { formatDate } from '../../DateApiWrapper'\n\nexport const DateFormatterInput = () => {\n  const [dateString, setDateString] = useState('')\n\n  const handleChange = (e) => {\n    setDateString(e.target.value)\n  }\n\n  return (\n    <section>\n      <h2>Take a User Input and Format It</h2>\n      <label htmlFor=\"date-formatter-input\">\n        Enter a date string (in just about any format!)\n      </label>\n      <br />\n      <br />\n      <input\n        id=\"date-formatter-input\"\n        value={dateString}\n        onChange={handleChange}\n      />\n      <br />\n      <br />\n      <p>\n        <b>You entered:</b> {dateString}\n      </p>\n      <p>\n        <b>The formatted date is:</b> {formatDate(dateString, 'MMMM DD, YYYY')}\n      </p>\n    </section>\n  )\n}\n","import React, { useState } from 'react'\nimport { formatDate, formatRelativeTimeToNow } from '../../DateApiWrapper'\n\nexport const RelativeTime = () => {\n  const [dateString, setDateString] = useState('')\n\n  const handleChange = (e) => {\n    setDateString(e.target.value)\n  }\n\n  return (\n    <section>\n      <h2>Relative Time</h2>\n      <label htmlFor=\"relative-time-input\">\n        Enter a date string (in just about any format!)\n      </label>\n      <br />\n      <br />\n      <input\n        id=\"relative-time-input\"\n        value={dateString}\n        onChange={handleChange}\n      />\n      <br />\n      <br />\n      <p>\n        {formatDate(dateString, 'MMMM DD, YYYY')} is/was{' '}\n        <b>{formatRelativeTimeToNow(dateString)}</b>\n      </p>\n    </section>\n  )\n}\n","import React from 'react'\nimport { CurrentDateTime } from './CurrentDateTime'\nimport { DateFormatterInput } from './DateFormatterInput'\nimport { RelativeTime } from './RelativeTime'\n\nexport const WrappedApiPage = () => (\n  <>\n    <CurrentDateTime />\n    <DateFormatterInput />\n    <RelativeTime />\n  </>\n)\n","import React, { useState } from 'react'\nimport { AppSectionSwticher } from './AppSectionSwitcher'\nimport { DemoStartingPointPage } from './components/00-demo-starting-point/DemoStartingPointPage'\nimport { MomentJsPage } from './components/01-momentjs/MomentJsPage'\nimport { DayJsPage } from './components/02-dayjs/DayJsPage'\nimport { DateFnsPage } from './components/03-date-fns/DateFnsPage'\nimport { WrappedApiPage } from './components/04-wrapped-api/WrappedApiPage'\nimport './App.css'\n\nfunction App() {\n  const [selectedRadioButton, setSelectedRadioButton] = useState('demo-start')\n\n  return (\n    <main className=\"app\">\n      <h1>\n        <i>Clean Code</i>, Chapter 8: Boundaries - Demo\n      </h1>\n      <AppSectionSwticher\n        selectedRadioButton={selectedRadioButton}\n        setSelectedRadioButton={setSelectedRadioButton}\n      />\n      {selectedRadioButton === 'demo-start' && <DemoStartingPointPage />}\n      {selectedRadioButton === 'momentjs' && <MomentJsPage />}\n      {selectedRadioButton === 'dayjs' && <DayJsPage />}\n      {selectedRadioButton === 'date-fns' && <DateFnsPage />}\n      {selectedRadioButton === 'wrapped-api' && <WrappedApiPage />}\n    </main>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}